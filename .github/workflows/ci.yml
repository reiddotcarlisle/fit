name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build & Lint (Go ${{ matrix.go }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        go: ['1.22', '1.23', '1.24']
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}
          check-latest: true
      - name: Cache Go build
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ matrix.go }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go }}-
      - name: Install staticcheck & govulncheck
        run: |
          go install honnef.co/go/tools/cmd/staticcheck@latest
          go install golang.org/x/vuln/cmd/govulncheck@latest || true
      - name: Verify (lint + tidy + vet + vuln + short tests)
        run: make verify
      - name: Build binaries
        run: make build
      - name: Upload artifacts (non-Windows omit DLLs)
        uses: actions/upload-artifact@v4
        with:
          name: fit-${{ matrix.os }}-${{ matrix.go }}
          path: |
            bin/fit*
            !bin/*.dll

  lint-fast:
    name: Quick Verify (latest Go)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.24'
      - run: make verify
